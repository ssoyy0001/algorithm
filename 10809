package algorithm;

import java.util.Scanner;

public class Main {
	public static void main(String args[]) {
	
	//알파벳 소문자로만 이루어진 단어 S가 주어진다.
	//각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 포함되어 있지 않은 경우에는 -1을 출력하시오.
	//(입력)
	//첫째 줄에 단어 S가 주어진다. 단어의 길이는 100을 넘지 않으며, 알파벳 소문자로만 이루어져 있다.
	//(출력)
	//각각의 알파벳에 대해서, a가 처음 등장하는 위치, b가 처음 등장하는 위치, ... z가 처음 등장하는 위치를 공백으로 구분해서 출력한다.
	//만약, 어떤 알파벳이 단어에 포함되어 있지 않다면 -1을 출력한다. 단어의 첫 번째 글자는 0번째 위치이고, 두 번째 글자는 1번째 위치이다.
	
	//로직::
	//알파벳 개수(26)만큼의 배열을 두 개 만들어서 하나에는 알파벳을, 나머지에는 -1을 넣어둔다.
	//배열의 크기만큼 for문을 만들고, 이중for문으로는 N의 크기만큼 돈다.
	//만약 알파벳이 N에 존재한다면 index를 저장하고 그 index값을 숫자배열에 넣는다.
	//숫자 배열 출력
	
	Scanner sc = new Scanner(System.in);
	String[] alpha = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"};
	int[] location = new int[26];
	for(int i=0; i<location.length; i++) {
		location[i] = -1;
	}
	
	String s = sc.nextLine();
	
	for(int i=0; i<alpha.length; i++) {
		for(int j=0; j<s.length(); j++) {
			if(location[i] != -1) {
				continue;
			}else if( alpha[i].charAt(0) == (s.charAt(j)) ) {
				location[i] = j;
			}
		
		}
	}
	
	for(int idx : location) {
		System.out.print(idx + " ");
	}
	
	sc.close();
		
	}
}
